# Ultimate Question Format Configuration
# This file defines the universal JSON schema for ALL AI question responses
# Used by both onboarding and business system prompts for consistency

format_version: "1.0"
description: "Comprehensive JSON format specification for AI question responses across all contexts"

# Core response structure - ALL AI responses should follow this
json_schema:
  description: "Universal JSON response format for AI questions and messages"
  
  # Primary response types
  response_types:
    structured_question:
      description: "Response containing a question that requires user input"
      required_fields:
        - message           # User-facing conversational text
        - field_name        # Database field identifier (snake_case)
        - field_type        # Question input type
      optional_fields:
        - multiple_choices  # Array of options (required for multiple_choice type)
        - allow_multiple    # Boolean for multi-selection (default: false)
        - status           # Progress/stage indicator
        - helper_text      # Additional guidance for the user
        - validation       # Input validation rules
        
    conversational_message:
      description: "Response containing only conversational text without data collection"
      required_fields:
        - message          # User-facing conversational text
      optional_fields:
        - status          # Progress/stage indicator
        - next_action     # Hint for what happens next

# Field specifications with strict validation rules
field_specifications:
  message:
    type: "string"
    description: "Primary user-facing conversational text"
    requirements:
      - "Must be natural, conversational language"
      - "Should include progress indicators when appropriate (e.g., 'Step 2 of 5')"
      - "Must be clear and specific to the business context"
      - "Should maintain professional but friendly tone"
    examples:
      - "Great! I've got your business name as 'Bella's Salon.' Step 2 of 5: What type of services do you primarily offer?"
      - "Perfect! Now I need to understand your booking preferences. How do customers typically schedule appointments with you?"

  field_name:
    type: "string"
    format: "snake_case"
    description: "Database field identifier for storing the user's response"
    requirements:
      - "Must use snake_case format (lowercase with underscores)"
      - "Should be descriptive and specific"
      - "Must be unique within the business context"
      - "Should follow consistent naming conventions"
    patterns:
      business_basics: ["business_name", "business_type", "services_offered", "business_description"]
      contact_info: ["phone_number", "email_address", "website_url", "business_address"]
      operations: ["business_hours", "appointment_duration", "booking_method", "payment_methods"]
      preferences: ["preferred_contact", "communication_style", "special_instructions"]
    examples:
      - "business_name"
      - "appointment_booking_method"
      - "preferred_payment_methods"
      - "customer_communication_preferences"

  field_type:
    type: "enum"
    allowed_values: ["text", "multiple_choice", "email", "phone", "url", "number"]
    description: "Input type that determines UI rendering and validation"
    specifications:
      text:
        description: "Open-ended text input"
        use_cases: ["Business names", "Descriptions", "Special instructions", "Addresses"]
        validation: "Basic text validation, typically 1-500 characters"
      multiple_choice:
        description: "Predefined options for user selection"
        use_cases: ["Service types", "Preferences", "Operational choices", "Yes/No questions"]
        requirements: ["Must include multiple_choices array", "3-6 clear options recommended"]
      email:
        description: "Email address input with validation"
        use_cases: ["Business email", "Contact email", "Notification email"]
        validation: "Email format validation"
      phone:
        description: "Phone number input with formatting"
        use_cases: ["Business phone", "Secondary contact", "Emergency contact"]
        validation: "Phone number format validation"
      url:
        description: "Website URL input"
        use_cases: ["Business website", "Social media links", "Booking portals"]
        validation: "URL format validation"
      number:
        description: "Numeric input"
        use_cases: ["Appointment duration", "Number of employees", "Years in business"]
        validation: "Numeric validation with optional ranges"

  multiple_choices:
    type: "array"
    description: "Array of predefined options for multiple_choice field_type"
    requirements:
      - "Required when field_type is 'multiple_choice'"
      - "Must contain 3-6 clear, distinct options"
      - "Options should be mutually exclusive unless allow_multiple is true"
      - "Use simple, clear language for each option"
      - "Do NOT include 'Other' option - UI handles this automatically"
    quality_guidelines:
      - "Options should cover the most common use cases"
      - "Use specific rather than vague terms"
      - "Order options logically (most common first or alphabetical)"
      - "Ensure options are culturally appropriate"
    examples:
      service_types: ["Hair & Beauty", "Health & Wellness", "Professional Services", "Retail & Sales", "Food & Dining", "Home Services"]
      booking_methods: ["Online booking system", "Phone calls only", "Walk-ins welcome", "Email scheduling"]
      business_hours: ["Monday-Friday 9AM-5PM", "Monday-Saturday 10AM-6PM", "7 days a week", "By appointment only"]
      payment_methods: ["Cash only", "Credit/Debit cards", "Digital payments", "All payment types"]

  allow_multiple:
    type: "boolean"
    default: false
    description: "Whether user can select multiple options from multiple_choices"
    use_cases:
      single_selection: ["Business type", "Primary contact method", "Business hours"]
      multiple_selection: ["Services offered", "Payment methods accepted", "Communication preferences"]

  status:
    type: "string"
    description: "Progress indicator for onboarding and workflow tracking"
    allowed_values:
      onboarding:
        - "stage_1_in_progress"    # Collecting basic business info
        - "stage_1_complete"       # Basic info collection finished
        - "stage_2_in_progress"    # Industry-specific questions
        - "stage_2_complete"       # Industry questions finished
        - "stage_3_in_progress"    # Preferences and logistics
        - "stage_3_complete"       # All onboarding questions complete
        - "setup_complete"         # Fully operational
      business_operations:
        - "gathering_info"         # Collecting additional business data
        - "clarifying_details"     # Getting more specific information
        - "updating_profile"       # Modifying existing information
        - "ready_to_assist"        # Standard operational mode

  helper_text:
    type: "string"
    description: "Optional guidance or context for the user"
    use_cases: ["Explain why info is needed", "Provide examples", "Clarify expectations"]
    examples:
      - "This helps us personalize your assistant's responses"
      - "We'll use this to suggest relevant features"
      - "Optional: This information helps improve customer interactions"

# Response format templates with concrete examples
response_templates:
  multiple_choice_question:
    description: "Standard multiple choice question format"
    template: |
      {
        "message": "Great! I've noted [previous_answer]. Step X of Y: [question_text]",
        "field_name": "descriptive_field_name",
        "field_type": "multiple_choice",
        "multiple_choices": ["Option 1", "Option 2", "Option 3", "Option 4"],
        "allow_multiple": false,
        "status": "stage_X_in_progress"
      }
    example: |
      {
        "message": "Perfect! I've got your business name as 'Sunset Yoga Studio.' Step 2 of 5: What type of services do you primarily offer?",
        "field_name": "primary_services",
        "field_type": "multiple_choice",
        "multiple_choices": ["Yoga classes", "Personal training", "Wellness coaching", "Fitness classes"],
        "allow_multiple": false,
        "status": "stage_1_in_progress"
      }

  text_input_question:
    description: "Open-ended text input question format"
    template: |
      {
        "message": "[conversational_context] [question_text]",
        "field_name": "descriptive_field_name",
        "field_type": "text",
        "status": "stage_X_in_progress",
        "helper_text": "[optional_guidance]"
      }
    example: |
      {
        "message": "Excellent! Now I'd love to learn more about your business. Could you briefly describe what makes your salon unique?",
        "field_name": "business_description",
        "field_type": "text",
        "status": "stage_1_in_progress",
        "helper_text": "This helps us create more personalized responses for your customers"
      }

  conversational_response:
    description: "Pure conversational message without data collection"
    template: |
      {
        "message": "[conversational_text]",
        "status": "stage_X_complete",
        "next_action": "[what_happens_next]"
      }
    example: |
      {
        "message": "Fantastic! I now have all the information I need to set up your AI assistant. Let me finalize your profile and we'll be ready to start helping your customers!",
        "status": "setup_complete",
        "next_action": "transition_to_operational_mode"
      }

# Strict formatting rules that AI must follow
formatting_rules:
  json_requirements:
    - "MUST return ONLY valid JSON - no markdown, no code blocks, no additional text"
    - "Response must start with { and end with }"
    - "All string values must be properly escaped"
    - "Use double quotes for all JSON keys and string values"
    - "No trailing commas allowed"
    
  content_requirements:
    - "message field must contain natural, conversational language"
    - "Include progress indicators in message when appropriate"
    - "field_name must follow snake_case convention strictly"
    - "multiple_choices must contain 3-6 realistic options"
    - "Never include 'Other' in multiple_choices (UI handles automatically)"
    
  quality_standards:
    - "Questions must be specific to the business context"
    - "Use clear, jargon-free language"
    - "Maintain professional but friendly tone"
    - "Provide sufficient context for user understanding"
    - "Ensure logical flow and progression"

# Common anti-patterns to avoid
anti_patterns:
  forbidden_formats:
    - "Plain text responses with bullet points"
    - "Markdown formatting in JSON strings"
    - "Code blocks around JSON responses"
    - "Multiple JSON objects in single response"
    
  content_issues:
    - "Vague or generic questions"
    - "Too many options in multiple_choice (>6)"
    - "Including 'Other' option in choices"
    - "Missing progress indicators"
    - "Inconsistent field naming"
    
  technical_problems:
    - "Invalid JSON syntax"
    - "Missing required fields"
    - "Wrong field_type for the question"
    - "Incorrect status values"

# Examples by business context for reference
contextual_examples:
  healthcare:
    appointment_booking: |
      {
        "message": "Great! Now I need to understand how patients schedule appointments with you. What's your preferred booking method?",
        "field_name": "appointment_booking_method",
        "field_type": "multiple_choice",
        "multiple_choices": ["Online booking system", "Phone calls only", "Walk-ins accepted", "Email scheduling"],
        "allow_multiple": false,
        "status": "stage_2_in_progress"
      }
      
  salon_spa:
    service_duration: |
      {
        "message": "Perfect! To help with scheduling, what's the typical duration for most of your appointments?",
        "field_name": "typical_appointment_duration",
        "field_type": "multiple_choice",
        "multiple_choices": ["30 minutes", "1 hour", "1.5 hours", "2+ hours"],
        "allow_multiple": false,
        "status": "stage_2_in_progress"
      }
      
  restaurant:
    reservation_policy: |
      {
        "message": "Excellent! Now about reservations - how do customers typically secure a table at your restaurant?",
        "field_name": "reservation_policy",
        "field_type": "multiple_choice",
        "multiple_choices": ["Reservations required", "Reservations recommended", "Walk-ins only", "Both accepted"],
        "allow_multiple": false,
        "status": "stage_2_in_progress"
      }